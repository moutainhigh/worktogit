<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwxf.industry4.webapp.domain.dao.procurement.PurchaseAuditDao">
    <resultMap id="PurchaseAuditMap" type="com.lwxf.industry4.webapp.domain.entity.procurement.PurchaseAudit">
        <id column="id" property="id" jdbcType="CHAR" />
        <result column="user_id" property="userId" jdbcType="CHAR" />
        <result column="type" property="type" jdbcType="TINYINT" />
        <result column="audit_opinion" property="auditOpinion" jdbcType="VARCHAR" />
        <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
        <result column="result" property="result" jdbcType="TINYINT" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="purchase_request_id" property="purchaseRequestId" jdbcType="CHAR" />
        <result column="creator" property="creator" jdbcType="CHAR" />
        <result column="created" property="created" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="columns">
id, user_id, type, audit_opinion, audit_time, result, purchase_request_id, creator, created,status
</sql>

    <select id="selectById" resultMap="PurchaseAuditMap" parameterType="String">
SELECT <include refid="columns" />
FROM   purchase_audit
WHERE  id = #{id}
</select>
    <select id="selectAuditByRequestId" resultMap="PurchaseAuditMap" parameterType="String">
        SELECT <include refid="columns" />
        FROM   purchase_audit
        WHERE  purchase_request_id = #{id} and (type=0 or type=1)
    </select>
    <select id="findByRequestIdAndLoginUserId" resultMap="PurchaseAuditMap">
        SELECT <include refid="columns" />
        FROM   purchase_audit
        WHERE  purchase_request_id = #{requestId} and   user_id=#{userId} and type=#{type}
    </select>

    <select id="findTypeByRequestIdAndUid" resultType="integer">
        SELECT type
        FROM   purchase_audit
        WHERE  purchase_request_id = #{requestId} and   user_id=#{userId}
    </select>

    <select id="selectByFilter" resultMap="PurchaseAuditMap">
SELECT <include refid="columns" />
FROM   purchase_audit
<where><trim prefixOverrides="AND">
<if test="id != null">
    id = #{id}
</if>
<if test="userId != null">
    AND user_id = #{userId}
</if>
<if test="type != null">
    AND type = #{type}
</if>
<if test="auditOpinion != null">
    AND audit_opinion = #{auditOpinion}
</if>
<if test="auditTime != null">
    AND audit_time = #{auditTime}
</if>
<if test="result != null">
    AND result = #{result}
</if>
<if test="purchaseRequestId != null">
    AND purchase_request_id = #{purchaseRequestId}
</if>
<if test="creator != null">
    AND creator = #{creator}
</if>
<if test="created != null">
    AND created = #{created}
</if>
</trim></where>

</select>

    <insert id="insert" useGeneratedKeys="false">
INSERT INTO 
purchase_audit(id, user_id, type, audit_opinion, audit_time, result, purchase_request_id, creator, created,status)
        VALUES(#{id}, #{userId}, #{type}, #{auditOpinion}, #{auditTime}, #{result}, #{purchaseRequestId}, #{creator}, #{created},#{status})
</insert>

    <update id="updateByMapContext">
UPDATE purchase_audit
<set><trim suffixOverrides=",">
<if test="_parameter.containsKey('userId') and userId != null">
    user_id = #{userId},
</if>
    <if test="_parameter.containsKey('type') and type != null">
    type = #{type},
</if>
    <if test="_parameter.containsKey('auditOpinion')">
    audit_opinion = #{auditOpinion},
</if>
    <if test="_parameter.containsKey('auditTime')">
    audit_time = #{auditTime},
</if>
    <if test="_parameter.containsKey('result')">
    result = #{result},
</if>
    <if test="_parameter.containsKey('purchaseRequestId')">
    purchase_request_id = #{purchaseRequestId},
</if>
    <if test="_parameter.containsKey('creator') and creator != null">
    creator = #{creator},
</if>
    <if test="_parameter.containsKey('created') and created != null">
    created = #{created}
</if>
    <if test="_parameter.containsKey('status') and status != null">
        status = #{status}
    </if>
</trim></set>
WHERE  id = #{id}
</update>

    <delete id="deleteById" parameterType="String">
DELETE FROM   purchase_audit
WHERE  id = #{id}
</delete>

</mapper>
