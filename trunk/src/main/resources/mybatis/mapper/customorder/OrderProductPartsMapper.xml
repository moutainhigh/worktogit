<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwxf.industry4.webapp.domain.dao.customorder.OrderProductPartsDao">
    <resultMap id="OrderProductPartsMap" type="com.lwxf.industry4.webapp.domain.entity.customorder.OrderProductParts">
        <id column="id" property="id" jdbcType="CHAR" />
        <result column="order_product_id" property="orderProductId" jdbcType="CHAR" />
        <result column="product_parts_id" property="productPartsId" jdbcType="CHAR" />
    </resultMap>
    <sql id="columns">
id, order_product_id, product_parts_id
</sql>

    <select id="selectById" resultMap="OrderProductPartsMap" parameterType="String">
SELECT <include refid="columns" />
FROM   order_product_parts
WHERE  id = #{id}
</select>

    <select id="selectByFilter" resultMap="OrderProductPartsMap">
SELECT <include refid="columns" />
FROM   order_product_parts
<where><trim prefixOverrides="AND">
<if test="id != null">
    id = #{id}
</if>
<if test="orderProductId != null">
    AND order_product_id = #{orderProductId}
</if>
<if test="productPartsId != null">
    AND product_parts_id = #{productPartsId}
</if>
</trim></where>

</select>
    <select id="findByProductPartsId" resultMap="OrderProductPartsMap">
        SELECT <include refid="columns" />
        FROM   order_product_parts
        where product_parts_id=#{partsId}

    </select>

    <select id="findByProductId" resultMap="OrderProductPartsMap">
        SELECT <include refid="columns" />
        FROM   order_product_parts
        where order_product_id=#{id}

    </select>
    <select id="findByProductIdAndPartsId" resultMap="OrderProductPartsMap">
        SELECT <include refid="columns" />
        FROM   order_product_parts
        where order_product_id=#{productId} and product_parts_id=#{productPartId}

    </select>


    <insert id="insert" useGeneratedKeys="false">
INSERT INTO 
order_product_parts(id, order_product_id, product_parts_id)
             VALUES(#{id}, #{orderProductId}, #{productPartsId})
</insert>

    <update id="updateByMapContext">
UPDATE order_product_parts
<set><trim suffixOverrides=",">
<if test="_parameter.containsKey('orderProductId') and orderProductId != null">
    order_product_id = #{orderProductId},
</if>
    <if test="_parameter.containsKey('productPartsId') and productPartsId != null">
    product_parts_id = #{productPartsId}
</if>
</trim></set>
WHERE  id = #{id}
</update>

    <delete id="deleteById" parameterType="String">
DELETE FROM   order_product_parts
WHERE  id = #{id}
</delete>
    <delete id="deleteByProductId" parameterType="String">
        DELETE FROM   order_product_parts
        WHERE  order_product_id = #{id}
    </delete>

</mapper>
